[package]
name = "canny_wedge_detector"
version = "0.1.0"
authors = ["Darian <dariandzirko@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
num = "0.4"

wasm-bindgen = "0.2.84"

cfg-if = "1"

winit = "0.27"
env_logger = "0.10"
log = "0.4"
wgpu = "0.15"
pollster = "0.2"
bytemuck = { version = "1.12", features = ["derive"] }
anyhow = "1.0"
cgmath = "0.18"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
console_log = "0.2.0"
wgpu = { version = "0.15", features = ["webgl"] }
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = ["Document", "Window", "Element"] }

[dependencies.image]
version = "0.24"
default-features = false
features = ["png", "jpeg"]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
